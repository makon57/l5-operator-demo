# prettier-ignore
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "pets.bestie.com/v1",
          "kind": "Bestie",
          "metadata": {
            "name": "bestie"
          },
          "spec": {
            "agencyname": "Animal Humane Society",
            "image": "quay.io/mkong/bestiev2",
            "size": 2,
            "version": "2.0"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.15.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: l5-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Bestie is the Schema for the besties API
      displayName: Bestie
      kind: Bestie
      name: besties.pets.bestie.com
      version: v1
  description: |
    The L5 operator is a Kubernetes and OpenShift compatible operator made to autopilot an application.
    It works alongside the Postgres Crunchy Data operator to assist in the complete automation of an
    application from seamless upgrades, offsite backups, rollbacks, and deep insights via metrics, logging,
    and events as well as autoscaling.

    The L5 operator was originally created as a demo operator to demonstrate the 5 capability levels of an operator
    for a conference. The requirements are defined [here](https://docs.google.com/document/d/1gNa2NQzlsHDdNHBYPczCytkuokEzBCFKjlxM12X5cdk/edit?usp=sharing)
    as we continue to develop the l5 operator to reach capability level 5--autopilot.

    The L5 operator aims to provide your application with the following functionality:
    * seamless upgrades
    * offsite backups
    * rollbacks
    * deep isnights via metrics, logging, & events
    * autoscaling


    ## Usage

    The L5 operator expects that a certificate manager is already available for usage. If a certificate manager
    is not installed, please install a certificate manager for the operator to function as intended.

    The L5 operator is compatible with both Kubernetes and OpenShift clusters, but with Kuberenetes please ensure that an
    ingress controller is installed for the ingress to work properly.

    The L5 operator works alongside the Crunchy Data PostgreSQL operator. Before installing the L5 operator, we highly encourage
    you to install the Crunchy Data PostgreSQL operator beforehand. You can easily install the Crunchy Data PostgreSQL operator
    via the OpenShift Container Platform when running on an OpenShift cluster or you can follow the directions [here](https://access.crunchydata.com/documentation/postgres-operator/4.7.5/installation/postgres-operator/)
    provided by the Crunchy Data teamto install the Crunchy Data PostgreSQL operator, if you are running your application on a
    vanilla Kubernetes cluster.

    See the [documentation]and examples on [github](https://github.com/opdev/l5-operator-demo) for more information.
  displayName: L5 Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - pets.bestie.com
          resources:
          - besties
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - pets.bestie.com
          resources:
          - besties/finalizers
          verbs:
          - update
        - apiGroups:
          - pets.bestie.com
          resources:
          - besties/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: l5-operator-controller-manager
      deployments:
      - name: l5-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: controller:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: l5-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: l5-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - l5-operator
  links:
  - name: L5 Operator
    url: https://l5-operator.domain
  maintainers:
  - email: your@email.com
    name: Maintainer Name
  maturity: alpha
  provider:
    name: Provider Name
    url: https://your.domain
  version: 0.0.1
